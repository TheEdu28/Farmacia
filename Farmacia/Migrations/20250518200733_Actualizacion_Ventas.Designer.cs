// <auto-generated />
using System;
using Farmacia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmacia.Migrations
{
    [DbContext(typeof(FarmaciaDbContext))]
    [Migration("20250518200733_Actualizacion_Ventas")]
    partial class Actualizacion_Ventas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmacia.Data.Medicamento", b =>
                {
                    b.Property<int>("ID_Medicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Medicamento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha_vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Proveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio_unitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock_actual")
                        .HasColumnType("int");

                    b.HasKey("ID_Medicamento");

                    b.HasIndex("ID_Proveedor");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("Farmacia.Data.Proveedor", b =>
                {
                    b.Property<int>("ID_Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Proveedor"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre_empresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID_Proveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Farmacia.Data.Venta", b =>
                {
                    b.Property<int>("ID_Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Venta"));

                    b.Property<int>("Cantidad_vendida")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_venta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("ID_Medicamento")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_venta")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ID_Venta");

                    b.HasIndex("ID_Medicamento");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Farmacia.Data.Medicamento", b =>
                {
                    b.HasOne("Farmacia.Data.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ID_Proveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Farmacia.Data.Venta", b =>
                {
                    b.HasOne("Farmacia.Data.Medicamento", "Medicamento")
                        .WithMany()
                        .HasForeignKey("ID_Medicamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Medicamento");
                });
#pragma warning restore 612, 618
        }
    }
}
